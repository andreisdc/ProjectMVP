// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectMVP.Data;

#nullable disable

namespace ProiectMVP.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230519002113_WholeStructureForScoala")]
    partial class WholeStructureForScoala
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("facultate")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MaterieProfesor", b =>
                {
                    b.Property<int>("MateriiId")
                        .HasColumnType("int");

                    b.Property<int>("ProfesoriId")
                        .HasColumnType("int");

                    b.HasKey("MateriiId", "ProfesoriId");

                    b.HasIndex("ProfesoriId");

                    b.ToTable("MaterieProfesor", "facultate");
                });

            modelBuilder.Entity("ProiectMVP.Models.Clasa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("An")
                        .HasColumnType("int");

                    b.Property<string>("Initiala")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clase", "facultate");
                });

            modelBuilder.Entity("ProiectMVP.Models.Elev", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClasaId")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClasaId");

                    b.ToTable("Elevi", "facultate");
                });

            modelBuilder.Entity("ProiectMVP.Models.ElevMaterie", b =>
                {
                    b.Property<int>("ElevId")
                        .HasColumnType("int");

                    b.Property<int>("MaterieId")
                        .HasColumnType("int");

                    b.Property<bool>("Absent")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.Property<string>("Semestru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ElevId", "MaterieId");

                    b.HasIndex("MaterieId");

                    b.ToTable("ElevMaterie", "facultate");
                });

            modelBuilder.Entity("ProiectMVP.Models.Materie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materie", "facultate");
                });

            modelBuilder.Entity("ProiectMVP.Models.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClasaDiriginteId")
                        .HasColumnType("int");

                    b.Property<bool>("Diriginte")
                        .HasColumnType("bit");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClasaDiriginteId")
                        .IsUnique();

                    b.ToTable("Profesor", "facultate");
                });

            modelBuilder.Entity("MaterieProfesor", b =>
                {
                    b.HasOne("ProiectMVP.Models.Materie", null)
                        .WithMany()
                        .HasForeignKey("MateriiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectMVP.Models.Profesor", null)
                        .WithMany()
                        .HasForeignKey("ProfesoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProiectMVP.Models.Elev", b =>
                {
                    b.HasOne("ProiectMVP.Models.Clasa", "Clasa")
                        .WithMany("Elevi")
                        .HasForeignKey("ClasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clasa");
                });

            modelBuilder.Entity("ProiectMVP.Models.ElevMaterie", b =>
                {
                    b.HasOne("ProiectMVP.Models.Elev", "Elev")
                        .WithMany("EleviMaterii")
                        .HasForeignKey("ElevId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectMVP.Models.Materie", "Materie")
                        .WithMany("EleviMaterii")
                        .HasForeignKey("MaterieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Elev");

                    b.Navigation("Materie");
                });

            modelBuilder.Entity("ProiectMVP.Models.Profesor", b =>
                {
                    b.HasOne("ProiectMVP.Models.Clasa", "ClasaDiriginte")
                        .WithOne("ProfesorDiriginte")
                        .HasForeignKey("ProiectMVP.Models.Profesor", "ClasaDiriginteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClasaDiriginte");
                });

            modelBuilder.Entity("ProiectMVP.Models.Clasa", b =>
                {
                    b.Navigation("Elevi");

                    b.Navigation("ProfesorDiriginte")
                        .IsRequired();
                });

            modelBuilder.Entity("ProiectMVP.Models.Elev", b =>
                {
                    b.Navigation("EleviMaterii");
                });

            modelBuilder.Entity("ProiectMVP.Models.Materie", b =>
                {
                    b.Navigation("EleviMaterii");
                });
#pragma warning restore 612, 618
        }
    }
}
